theme(axis.text.x = element_text(face='bold',angle=90,vjust = 1,size =8,hjust = 1),
axis.text.y = element_text(face='bold',size=8),
axis.title.x=element_blank(),
axis.title.y=element_blank())
m <- rbind(c(1, 2,3), c(4, 5,0))
layout(m)
par(mar = c(3, 3, 3, 3))
plot(crime_df$urban, crime_df$density, main = "density vs. urban")
abline(lm(density~urban, data = crime_df), col="red")
plot(crime_df$west, crime_df$pctmin80, main = "pctmin80 vs. west")
abline(lm(pctmin80~west, data = crime_df), col="red")
plot(crime_df$wtrd, crime_df$density, main = "density vs. wtrd")
abline(lm(density~wtrd, data = crime_df), col="red")
plot(crime_df$wfed, crime_df$density, main = "density vs. wfed")
abline(lm(density~wfed, data = crime_df), col="red")
plot(crime_df$wfir, crime_df$density, main = "density vs. wfir")
abline(lm(density~wfir, data = crime_df), col="red")
# Residuals vs. Fitted Plot
plot(model1, which=1)
# Residuals vs. Fitted Plot
plot(model1, which=1)
# Scale-Location Plot
plot(model1, which=3)
# Breusch-Pagan
bptest(model1)
# Scale-Location Plot
plot(model1, which=3)
# Breusch-Pagan
bptest(model1)
# Breusch-Pagan
bptest(model1)
# Breusch-Pagan
bptest(model1)
# Breusch-Pagan
bptest(model1)
# Q-Q plot of Standardized Residuals
plot(model1, which=2)
shapiro.test(model1$residuals)
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Import all libraries that will be used in the lab
library(car)
library(reshape2)
library(ggplot2)
library(sandwich)
library(stargazer)
library(lmtest)
# Set directory based on who is running code
if(file.exists("/Users/adamyang/")){
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/"
} else if(file.exists("C:/Users/ak021523/")){
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
} else {
mydir<- "F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
}
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
# get rid of rows with missing values (this only kills the 6 blank rows)
crime_df<-crime_df[complete.cases(crime_df),]
# convert prob of conviction to numeric
crime_df$prbconv <- as.numeric(as.character(crime_df$prbconv))
summary(crime_df[,c('prbarr', 'prbconv', 'density')])
crime_df$density[79] = NA
m <- rbind(c(1, 2), c(3, 4))
layout(m)
boxplot(crime_df$polpc, main ='Boxplot of polpc')
boxplot(crime_df$prbarr, main ='Boxplot of prbarr')
boxplot(crime_df$wser, main = 'Boxplot of wser')
boxplot(crime_df$taxpc, main = 'Boxplot of taxpc')
hist(crime_df$crmrte, main="Histogram of crmrte", breaks=30)
m <- rbind(c(1, 2), c(3, 4))
layout(m)
hist(crime_df$polpc, main="Histogram of polpc", breaks=50)
hist(crime_df$prbarr, main="Histogram of prbarr", breaks=50)
hist(crime_df$density, main="Histogram of density", breaks=50)
hist(crime_df$pctmin80, main="Histogram of pctmin80", breaks=50)
spm(~crmrte + polpc + prbarr + density + pctmin80, data=crime_df)
# Correlation matrix
cor_dr = cor(crime_df[c('prbarr','prbpris','prbconv','avgsen','polpc','density',
'taxpc','west','central','urban','pctmin80','wcon','wtuc',
'wtrd','wfir','wser','wmfg','wfed','wsta','wloc','mix','pctymle')],
use = "complete.obs")
# Heatmap
ggplot(data = melt(cor_dr, na.rm = TRUE),
aes(Var2, Var1, fill = value))+
theme_minimal()+
geom_tile(color = 'white')+
scale_fill_gradient2(low = 'blue',high = "orange",mid = 'white',
midpoint = 0,limit = c(-1,1),name= 'Correlation')+
theme(axis.text.x = element_text(face='bold',angle=90,vjust = 1,size =8,hjust = 1),
axis.text.y = element_text(face='bold',size=8),
axis.title.x=element_blank(),
axis.title.y=element_blank())
m <- rbind(c(1, 2,3), c(4, 5,0))
layout(m)
par(mar = c(3, 3, 3, 3))
plot(crime_df$urban, crime_df$density, main = "density vs. urban")
abline(lm(density~urban, data = crime_df), col="red")
plot(crime_df$west, crime_df$pctmin80, main = "pctmin80 vs. west")
abline(lm(pctmin80~west, data = crime_df), col="red")
plot(crime_df$wtrd, crime_df$density, main = "density vs. wtrd")
abline(lm(density~wtrd, data = crime_df), col="red")
plot(crime_df$wfed, crime_df$density, main = "density vs. wfed")
abline(lm(density~wfed, data = crime_df), col="red")
plot(crime_df$wfir, crime_df$density, main = "density vs. wfir")
abline(lm(density~wfir, data = crime_df), col="red")
# Creating initial model
model1 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 , data = crime_df)
# Residuals vs. Fitted Plot
plot(model1, which=1)
# Scale-Location Plot
plot(model1, which=3)
# Breusch-Pagan
bptest(model1)
# Q-Q plot of Standardized Residuals
plot(model1, which=2)
shapiro.test(model1$residuals)
hist(model1$residuals, breaks=20)
# Q-Q plot of Standardized Residuals
plot(model1, which=2)
shapiro.test(model1$residuals)
plot(model2, which=1, caption="", main="Residuals vs Fitted (Model 2)")
plot(model2, which=3, caption="", main="Scale-Location (Model 2)")
bptest(model2)
plot(model2, which=3, caption="", main="Scale-Location (Model 2)")
bptest(model2)
paste("Model 2 adj.r.square:", summary(model2)$adj.r.squared)
coeftest(model2, vcovHC)
paste("Model 2 adj.r.square:", summary(model2)$adj.r.squared)
coeftest(model2, vcovHC)
plot(model2, which = 5)
plot(model1, which=5)
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Import all libraries that will be used in the lab
library(car)
library(reshape2)
library(ggplot2)
library(sandwich)
library(stargazer)
library(lmtest)
# Set directory based on who is running code
if(file.exists("/Users/adamyang/")){
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/"
} else if(file.exists("C:/Users/ak021523/")){
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
} else {
mydir<- "F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
}
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
# get rid of rows with missing values (this only kills the 6 blank rows)
crime_df<-crime_df[complete.cases(crime_df),]
# convert prob of conviction to numeric
crime_df$prbconv <- as.numeric(as.character(crime_df$prbconv))
summary(crime_df[,c('prbarr', 'prbconv', 'density')])
crime_df$density[79] = NA
m <- rbind(c(1, 2), c(3, 4))
layout(m)
boxplot(crime_df$polpc, main ='Boxplot of polpc')
boxplot(crime_df$prbarr, main ='Boxplot of prbarr')
boxplot(crime_df$wser, main = 'Boxplot of wser')
boxplot(crime_df$taxpc, main = 'Boxplot of taxpc')
hist(crime_df$crmrte, main="Histogram of crmrte", breaks=30)
m <- rbind(c(1, 2), c(3, 4))
layout(m)
hist(crime_df$polpc, main="Histogram of polpc", breaks=50)
hist(crime_df$prbarr, main="Histogram of prbarr", breaks=50)
hist(crime_df$density, main="Histogram of density", breaks=50)
hist(crime_df$pctmin80, main="Histogram of pctmin80", breaks=50)
spm(~crmrte + polpc + prbarr + density + pctmin80, data=crime_df)
# Correlation matrix
cor_dr = cor(crime_df[c('prbarr','prbpris','prbconv','avgsen','polpc','density',
'taxpc','west','central','urban','pctmin80','wcon','wtuc',
'wtrd','wfir','wser','wmfg','wfed','wsta','wloc','mix','pctymle')],
use = "complete.obs")
# Heatmap
ggplot(data = melt(cor_dr, na.rm = TRUE),
aes(Var2, Var1, fill = value))+
theme_minimal()+
geom_tile(color = 'white')+
scale_fill_gradient2(low = 'blue',high = "orange",mid = 'white',
midpoint = 0,limit = c(-1,1),name= 'Correlation')+
theme(axis.text.x = element_text(face='bold',angle=90,vjust = 1,size =8,hjust = 1),
axis.text.y = element_text(face='bold',size=8),
axis.title.x=element_blank(),
axis.title.y=element_blank())
m <- rbind(c(1, 2,3), c(4, 5,0))
layout(m)
par(mar = c(3, 3, 3, 3))
plot(crime_df$urban, crime_df$density, main = "density vs. urban")
abline(lm(density~urban, data = crime_df), col="red")
plot(crime_df$west, crime_df$pctmin80, main = "pctmin80 vs. west")
abline(lm(pctmin80~west, data = crime_df), col="red")
plot(crime_df$wtrd, crime_df$density, main = "density vs. wtrd")
abline(lm(density~wtrd, data = crime_df), col="red")
plot(crime_df$wfed, crime_df$density, main = "density vs. wfed")
abline(lm(density~wfed, data = crime_df), col="red")
plot(crime_df$wfir, crime_df$density, main = "density vs. wfir")
abline(lm(density~wfir, data = crime_df), col="red")
# Creating initial model
model1 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 , data = crime_df)
# Residuals vs. Fitted Plot
plot(model1, which=1)
# Scale-Location Plot
plot(model1, which=3)
# Breusch-Pagan
bptest(model1)
# Q-Q plot of Standardized Residuals
plot(model1, which=2)
shapiro.test(model1$residuals)
hist(model1$residuals, breaks=20)
linearHypothesis(model1, c("prbarr = 0", " density = 0", "polpc = 0", "pctmin80 = 0"), vcov = vcovHC)
paste("adj.r.square:", summary(model1)$adj.r.squared)
coeftest(model1, vcovHC)
plot(model1, which=5)
# Creating Model 2
model2 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 + prbconv + pctymle, data = crime_df)
plot(model2, which=1, caption="", main="Residuals vs Fitted (Model 2)")
plot(model2, which=3, caption="", main="Scale-Location (Model 2)")
bptest(model2)
paste("Model 2 adj.r.square:", summary(model2)$adj.r.squared)
coeftest(model2, vcovHC)
plot(model2, which = 5)
model3 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 + prbconv + pctymle + log(wcon) + log(wtuc) + log(wser) + log(wmfg) + log(wsta) + log(wloc) + log(wser) + taxpc  + central + mix + prbpris + avgsen, data = crime_df)
#scale location plot
plot(model3, which=3)
#breusch-pagan test
bptest(model3)
#print adj r squared
paste("adj.r.square:", summary(model3)$adj.r.squared)
#test coefficient significance
coeftest(model3, vcov = vcovHC)
plot(model3, which = 5)
#scale location plot
plot(model3, which=3)
hist(model3$residuals)
#breusch-pagan test
bptest(model3)
#scale location plot
plot(model3, which=3)
#breusch-pagan test
bptest(model3)
plot(model2, which=3, caption="", main="Scale-Location (Model 2)")
bptest(model2)
hist(model2$residuals)
plot(model2, which=3, caption="", main="Scale-Location (Model 2)")
bptest(model2)
# Q-Q plot of Standardized Residuals
plot(model1, which=2)
shapiro.test(model1$residuals)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
shapiro.test(model3$residuals)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
hist(model1$residuals, breaks=20)
shapiro.test(model3$residuals)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
hist(model3$residuals, breaks=20)
shapiro.test(model3$residuals)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
hist(model3$residuals)
shapiro.test(model3$residuals)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
hist(model3$residuals, breaks=20)
shapiro.test(model3$residuals)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
shapiro.test(model3$residuals)
#print adj r squared
paste("adj.r.square:", summary(model3)$adj.r.squared)
#test coefficient significance
coeftest(model3, vcov = vcovHC)
plot(model3, which = 5)
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "text", report = "vcsp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001))
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Import all libraries that will be used in the lab
library(car)
library(reshape2)
library(ggplot2)
library(sandwich)
library(stargazer)
library(lmtest)
# Set directory based on who is running code
if(file.exists("/Users/adamyang/")){
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/"
} else if(file.exists("C:/Users/ak021523/")){
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
} else {
mydir<- "F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
}
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
# get rid of rows with missing values (this only kills the 6 blank rows)
crime_df<-crime_df[complete.cases(crime_df),]
# convert prob of conviction to numeric
crime_df$prbconv <- as.numeric(as.character(crime_df$prbconv))
summary(crime_df[,c('prbarr', 'prbconv', 'density')])
crime_df$density[79] = NA
m <- rbind(c(1, 2), c(3, 4))
layout(m)
boxplot(crime_df$polpc, main ='Boxplot of polpc')
boxplot(crime_df$prbarr, main ='Boxplot of prbarr')
boxplot(crime_df$wser, main = 'Boxplot of wser')
boxplot(crime_df$taxpc, main = 'Boxplot of taxpc')
hist(crime_df$crmrte, main="Histogram of crmrte", breaks=30)
m <- rbind(c(1, 2), c(3, 4))
layout(m)
hist(crime_df$polpc, main="Histogram of polpc", breaks=50)
hist(crime_df$prbarr, main="Histogram of prbarr", breaks=50)
hist(crime_df$density, main="Histogram of density", breaks=50)
hist(crime_df$pctmin80, main="Histogram of pctmin80", breaks=50)
spm(~crmrte + polpc + prbarr + density + pctmin80, data=crime_df)
# Correlation matrix
cor_dr = cor(crime_df[c('prbarr','prbpris','prbconv','avgsen','polpc','density',
'taxpc','west','central','urban','pctmin80','wcon','wtuc',
'wtrd','wfir','wser','wmfg','wfed','wsta','wloc','mix','pctymle')],
use = "complete.obs")
# Heatmap
ggplot(data = melt(cor_dr, na.rm = TRUE),
aes(Var2, Var1, fill = value))+
theme_minimal()+
geom_tile(color = 'white')+
scale_fill_gradient2(low = 'blue',high = "orange",mid = 'white',
midpoint = 0,limit = c(-1,1),name= 'Correlation')+
theme(axis.text.x = element_text(face='bold',angle=90,vjust = 1,size =8,hjust = 1),
axis.text.y = element_text(face='bold',size=8),
axis.title.x=element_blank(),
axis.title.y=element_blank())
m <- rbind(c(1, 2,3), c(4, 5,0))
layout(m)
par(mar = c(3, 3, 3, 3))
plot(crime_df$urban, crime_df$density, main = "density vs. urban")
abline(lm(density~urban, data = crime_df), col="red")
plot(crime_df$west, crime_df$pctmin80, main = "pctmin80 vs. west")
abline(lm(pctmin80~west, data = crime_df), col="red")
plot(crime_df$wtrd, crime_df$density, main = "density vs. wtrd")
abline(lm(density~wtrd, data = crime_df), col="red")
plot(crime_df$wfed, crime_df$density, main = "density vs. wfed")
abline(lm(density~wfed, data = crime_df), col="red")
plot(crime_df$wfir, crime_df$density, main = "density vs. wfir")
abline(lm(density~wfir, data = crime_df), col="red")
# Creating initial model
model1 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 , data = crime_df)
# Residuals vs. Fitted Plot
plot(model1, which=1)
# Scale-Location Plot
plot(model1, which=3)
# Breusch-Pagan
bptest(model1)
# Q-Q plot of Standardized Residuals
plot(model1, which=2)
shapiro.test(model1$residuals)
hist(model1$residuals, breaks=20)
linearHypothesis(model1, c("prbarr = 0", " density = 0", "polpc = 0", "pctmin80 = 0"), vcov = vcovHC)
paste("adj.r.square:", summary(model1)$adj.r.squared)
coeftest(model1, vcovHC)
coeftest(model2, vcovHC)
plot(model1, which=5)
# Creating Model 2
model2 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 + prbconv + pctymle, data = crime_df)
plot(model2, which=1, caption="", main="Residuals vs Fitted (Model 2)")
plot(model2, which=3, caption="", main="Scale-Location (Model 2)")
bptest(model2)
paste("Model 2 adj.r.square:", summary(model2)$adj.r.squared)
coeftest(model2, vcovHC)
plot(model2, which = 5)
model3 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 + prbconv + pctymle + log(wcon) + log(wtuc) + log(wser) + log(wmfg) + log(wsta) + log(wloc) + log(wser) + taxpc  + central + mix + prbpris + avgsen, data = crime_df)
#scale location plot
plot(model3, which=3)
#breusch-pagan test
bptest(model3)
# Q-Q plot of Standardized Residuals
plot(model3, which=2)
shapiro.test(model3$residuals)
#print adj r squared
paste("adj.r.square:", summary(model3)$adj.r.squared)
#test coefficient significance
coeftest(model3, vcov = vcovHC)
plot(model3, which = 5)
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "text", report = "vcsp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "latex", report = "vcsp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "text", report = "vcsp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001))
#joint significance between model1 and model2
waldtest(model1, model2, vcov = vcovHC)
#joint significance between model2 and model3
waldtest(model2, model3, vcov = vcovHC)
AIC(model1)
AIC(model2)
AIC(model3)
AIC(model1)
AIC(model2)
AIC(model3)
#joint significance between model1 and model2
waldtest(model1, model2, vcov = vcovHC)
#joint significance between model2 and model3
waldtest(model2, model3, vcov = vcovHC)
AIC(model1)
AIC(model2)
AIC(model3)
shapiro.test(model1$residuals)
shapiro.test(model2$residuals)
shapiro.test(model1$residuals)
shapiro.test(model2$residuals)
plot(model2, 5)
coeftest(model1, vcovHC)
coeftest(model2, vcovHC)
coeftest(model1, vcovHC)
coeftest(model2, vcovHC)
linearHypothesis(model1, c("prbarr = 0", " density = 0", "polpc = 0", "pctmin80 = 0"), vcov = vcovHC)
paste("adj.r.square:", summary(model1)$adj.r.squared)
# Residuals vs. Fitted Plot
plot(model2, which=1)
# Scale-Location Plot
plot(model2, which=3)
# Breusch-Pagan
bptest(model2)
# Q-Q plot of Standardized Residuals
plot(model2, which=2)
shapiro.test(model2$residuals)
# Residuals vs. Fitted Plot
plot(model2, which=1)
# Scale-Location Plot
plot(model2, which=3)
# Breusch-Pagan
bptest(model2)
# Q-Q plot of Standardized Residuals
plot(model2, which=2)
shapiro.test(model2$residuals)
hist(model2$residuals, breaks=20)
hist(model2$residuals)
model4 <- lm(crmrte ~ prbarr + density + polpc + pctmin80 + pctymle, data = crime_df)
plot(model4, which = 1)
plot(model4, which = 1)
plot(model4, which = 2)
shapiro.test(model4$residuals)
shapiro.test(model2$residuals)
plot(model4, which = 5)
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model4 <- sqrt(diag(vcovHC(model4)))
#stargazer with all 3 models
stargazer(model2, model4, title = "Regression Models", type = "text", report = "vcsp", omit.stat = "f", se = list(se.model2, se.model4), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model4 <- sqrt(diag(vcovHC(model4)))
#stargazer with all 3 models
stargazer(model2, model4, title = "Regression Models", type = "text", report = "vcp", omit.stat = "f", se = list(se.model2, se.model4), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model4 <- sqrt(diag(vcovHC(model4)))
#stargazer with all 3 models
stargazer(model2, model4, title = "Regression Models", type = "text", report = "vcp", omit.stat = "f", se = list(se.model2, se.model4), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model4 <- sqrt(diag(vcovHC(model4)))
#stargazer with all 3 models
stargazer(model2, model4, title = "Regression Models", type = "text", report = "vcsp", omit.stat = "f", se = list(se.model2, se.model4), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model4 <- sqrt(diag(vcovHC(model4)))
#stargazer with all 3 models
stargazer(model2, model4, title = "Regression Models", type = "text", report = "vcsp", omit.stat = "f", se = list(se.model2, se.model4), star.cutoffs = c(0.05,0.01,0.001))
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "latex", report = "vcp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001), single.row = TRUE)
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "latex", report = "vcp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001), font.size = 0.5)
# Replace regular Standard Errors with the heteroscedasticity-robust Standard Errors
se.model1 <- sqrt(diag(vcovHC(model1)))
se.model2 <- sqrt(diag(vcovHC(model2)))
se.model3 <- sqrt(diag(vcovHC(model3)))
#stargazer with all 3 models
stargazer(model1, model2, model3, title = "Regression Models", type = "latex", report = "vcp", omit.stat = "f", se = list(se.model1, se.model2, se.model3), star.cutoffs = c(0.05,0.01,0.001), font.size = "small")
par(mar=c(2.1,4.1,1.1,1.1))
options(repr.plot.width=4, repr.plot.height=4)
hist(crime_df$crmrte, main="Histogram of crmrte", breaks=30)
par(mar=c(2.1,4.1,1.1,1.1))
options(repr.plot.width=4.5, repr.plot.height=3)
hist(crime_df$crmrte, main="Histogram of crmrte", breaks=30)
