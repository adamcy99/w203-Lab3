knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(car)
#library(reshape2)
library(ggplot2)
# define dir
#mydir<-"F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
tools
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(car)
library(reshape2)
library(ggplot2)
# Adam's directory
mydir <- "/Users/adamyang/Desktop/w203 Statistics for Data Science/Lab3/w203-Lab3"
# Armand's directory
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
#mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
library(car)
library(reshape2)
library(ggplot2)
# Adam's directory
mydir <- "/Users/adamyang/Desktop/w203 Statistics for Data Science/Lab3/w203-Lab3/"
# Armand's directory
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
#mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
library(car)
library(reshape2)
library(ggplot2)
# Adam's directory
mydir <- "~/Desktop/w203 Statistics for Data Science/Lab3/w203-Lab3/"
# Armand's directory
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
#mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
library(car)
library(reshape2)
library(ggplot2)
# Adam's directory
mydir <- "/Users/adamyang/Desktop/w203\ Statistics\ for\ Data\ Science/Lab3/w203-Lab3/"
# Armand's directory
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
#mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
library(car)
library(reshape2)
library(ggplot2)
# Adam's directory
mydir <- "/Users/adamyang/Desktop/w203\ Statistics\ for\ Data\ Science/Lab3/w203-Lab3/"
# Armand's directory
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
#mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(car)
library(reshape2)
library(ggplot2)
# Adam's dir
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/""
# Armand's dir
mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
library(car)
library(reshape2)
library(ggplot2)
# Adam's dir
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/""
# Armand's dir
#mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
library(car)
library(reshape2)
library(ggplot2)
# Adam's dir
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/"
# Armand's dir
# mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
# mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
# summarize all vars
summary(crime_df)
str(crime_df)
# get rid of rows with missing values (this only kills the 6 blank rows)
crime_df<-crime_df[complete.cases(crime_df),]
# convert prob of conviction to numeric
crime_df$prbconv <- as.numeric(as.character(crime_df$prbconv))
#TODO clean out the warning
std_model <- lm(crmrte ~ . - county-year-crmrte-urban-west-wtrd-wfed-wfir, data =  std_crime_df)
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(car)
library(reshape2)
library(ggplot2)
# Adam's dir
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/"
# Armand's dir
# mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
# mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
# summarize all vars
summary(crime_df)
str(crime_df)
# get rid of rows with missing values (this only kills the 6 blank rows)
crime_df<-crime_df[complete.cases(crime_df),]
# convert prob of conviction to numeric
crime_df$prbconv <- as.numeric(as.character(crime_df$prbconv))
boxplot(crime_df$polpc, main ='polpc')
boxplot(crime_df$prbarr, main ='prbarr')
boxplot(crime_df$wser, main = 'wser')
boxplot(crime_df$taxpc, main = 'taxpc')
# 1.5 IQR from the Q3 = outlier but we can decide which to eliminate
#TODO - fix matrix sizing
#correlation matrix for top 4 correlation and bottom 4 correlation
cor_dr = cor(crime_df[c('prbarr',
'prbpris',
'prbconv',
'avgsen',
'polpc',
'density',
'taxpc',
'west',
'central',
'urban',
'pctmin80',
'wcon',
'wtuc',
'wtrd',
'wfir',
'wser',
'wmfg',
'wfed',
'wsta',
'wloc',
'mix',
'pctymle')],
use = "complete.obs")
# Heatmap
ggplot(data = melt(cor_dr, na.rm = TRUE),
aes(Var2, Var1, fill = value))+
theme_minimal()+
geom_tile(color = 'white')+
scale_fill_gradient2(low = 'blue',
high = "orange",
mid = 'white',
midpoint = 0,
limit = c(-1,1),
name= 'Correlation')+
theme(axis.text.x = element_text(face='bold',
angle=90,
vjust = 1,
size =8,
hjust = 1),
axis.text.y = element_text(face='bold',
size=8),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(crime_df$urban, crime_df$density)
plot(crime_df$west, crime_df$pctmin80)
plot(crime_df$wtrd, crime_df$wfir)
plot(crime_df$wtrd, crime_df$wfed)
plot(crime_df$wfed, crime_df$wfir)
plot(crime_df$wfed+crime_df$wtrd+crime_df$wfir, crime_df$density)
# make a copy of crime_df for standardizing values
std_crime_df <- cbind(crime_df)
# a function to standardize values (fraction of range)
standardize_values <- function(x){(x-min(x))/(max(x)-min(x))}
# for all columns other than county number, year, and crime rate, standardize between 0 and 1
for (col in 4:ncol(std_crime_df)) {
std_crime_df[,col] <- standardize_values(std_crime_df[,col])
}
summary(std_crime_df)
#TODO clean out the warning
std_model <- lm(crmrte ~ . - county-year-crmrte-urban-west-wtrd-wfed-wfir, data =  std_crime_df)
plot(std_model,1)
plot(std_model,5)
plot(std_model,2)
#summary(std_model)$r.squared
install.packages("stargazer")
knitr::opts_chunk$set(echo = TRUE, tidy.opts=list(width.cutoff=60),tidy=TRUE)
#opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(car)
library(reshape2)
library(ggplot2)
# Adam's dir
mydir <- "/Users/adamyang/Desktop/w203/Lab3/w203-Lab3/"
# Armand's dir
# mydir<-"C:/Users/ak021523/Documents/GitHub/mids-repos/W203/Homework/w203-Lab3/"
#jim's directory
# mydir<- F:/users/jddel/Documents/DATA_SCIENCE_DEGREE_LAPTOP/W203_Stats/Lab_03/"
# read df
crime_df = read.csv(paste0(mydir,'crime_v2.csv'))
# summarize all vars
summary(crime_df)
str(crime_df)
# get rid of rows with missing values (this only kills the 6 blank rows)
crime_df<-crime_df[complete.cases(crime_df),]
# convert prob of conviction to numeric
crime_df$prbconv <- as.numeric(as.character(crime_df$prbconv))
boxplot(crime_df$polpc, main ='polpc')
boxplot(crime_df$prbarr, main ='prbarr')
boxplot(crime_df$wser, main = 'wser')
boxplot(crime_df$taxpc, main = 'taxpc')
# 1.5 IQR from the Q3 = outlier but we can decide which to eliminate
#TODO - fix matrix sizing
#correlation matrix for top 4 correlation and bottom 4 correlation
cor_dr = cor(crime_df[c('prbarr',
'prbpris',
'prbconv',
'avgsen',
'polpc',
'density',
'taxpc',
'west',
'central',
'urban',
'pctmin80',
'wcon',
'wtuc',
'wtrd',
'wfir',
'wser',
'wmfg',
'wfed',
'wsta',
'wloc',
'mix',
'pctymle')],
use = "complete.obs")
# Heatmap
ggplot(data = melt(cor_dr, na.rm = TRUE),
aes(Var2, Var1, fill = value))+
theme_minimal()+
geom_tile(color = 'white')+
scale_fill_gradient2(low = 'blue',
high = "orange",
mid = 'white',
midpoint = 0,
limit = c(-1,1),
name= 'Correlation')+
theme(axis.text.x = element_text(face='bold',
angle=90,
vjust = 1,
size =8,
hjust = 1),
axis.text.y = element_text(face='bold',
size=8),
axis.title.x=element_blank(),
axis.title.y=element_blank())
plot(crime_df$urban, crime_df$density)
plot(crime_df$west, crime_df$pctmin80)
plot(crime_df$wtrd, crime_df$wfir)
plot(crime_df$wtrd, crime_df$wfed)
plot(crime_df$wfed, crime_df$wfir)
plot(crime_df$wfed+crime_df$wtrd+crime_df$wfir, crime_df$density)
# make a copy of crime_df for standardizing values
std_crime_df <- cbind(crime_df)
# a function to standardize values (fraction of range)
standardize_values <- function(x){(x-min(x))/(max(x)-min(x))}
# for all columns other than county number, year, and crime rate, standardize between 0 and 1
for (col in 4:ncol(std_crime_df)) {
std_crime_df[,col] <- standardize_values(std_crime_df[,col])
}
summary(std_crime_df)
#TODO clean out the warning
std_model <- lm(crmrte ~ . - county-year-crmrte-urban-west-wtrd-wfed-wfir, data =  std_crime_df)
plot(std_model,1)
plot(std_model,5)
plot(std_model,2)
#summary(std_model)$r.squared
std_crime_df2 <- std_crime_df[-c(84,25),]
std_model2 <- lm(crmrte ~ . - county-year-crmrte-urban-west-wtrd-wfed-wfir, data =  std_crime_df2)
plot(std_model2,1)
plot(std_model2,5)
plot(std_model2,2)
coeff_df = data.frame(summary(std_model)$coefficients)
#summary(std_model)$r.squared
#base R-Squared
base_model <- lm(crmrte~.-county-year-crmrte, data=std_crime_df)
base_r2 <- summary(base_model)$r.squared
#create list of variables for the for-loop
var_names <- colnames(std_crime_df)
remove <- c('county',
'year',
'crmrte',
'urban',
'west',
'wtrd',
'wfed',
'wfir')
var_names <- var_names[! var_names %in% remove]
#initiate an empty vector to store the marginal R-Squared
var_r2_delta = c()
#loop through the variable names and store the marginal R-Squared
for (i in var_names) {
fmla <- as.formula(paste("crmrte ~ - crmrte +", paste(var_names[! var_names %in% i], collapse= "+")))
delta_model <- lm(fmla, data=crime_df)
r2_delta <- base_r2-summary(delta_model)$r.squared
var_r2_delta <- c(var_r2_delta, r2_delta)
}
#put the variable and marginal R-squared in a dataframe
mar_r2_df <- data.frame(v1=var_names, v2=var_r2_delta)
colnames(mar_r2_df) <- c('variable', 'marginalr2')
#sort dataframe by marginal R-squared in a descending order
#mar_r2_df <- mar_r2_df[rev(order(mar_r2_df$marginalr2)),]
plot(abs(coeff_df[-c(1),]$Estimate),mar_r2_df$marginalr2)
subset(mar_r2_df, marginalr2 > .04)
crime_df2 <- crime_df[-c(84,25),]
model1 <- lm(crmrte ~ . - county-year-crmrte-urban-west-wtrd-wfed-wfir, data = crime_df2)
summary(model1)$r.squared
summary(model1)$coefficients
model_transform <- lm(crmrte ~ prbarr + log(prbconv) + density, data = crime_df2)
summary(model_transform)$r.squared
summary(model_transform)$coefficients
model_key <- lm(crmrte ~ prbarr + prbconv + polpc + density + pctmin80, data = crime_df2)
summary(model_key)$r.squared
summary(model_key)$coefficients
stargazer()
stargazer(model_key, model_transform, model1,
type = 'text', report = 'vc')
stargazer(model_key, model_transform, model1,
type = 'text', report = 'vc',
keep.stat = c('rsq', 'n'),
omit.table.layout = "n")
library(stargazer)
stargazer(model_key, model_transform, model1,
type = 'text', report = 'vc',
keep.stat = c('rsq', 'n'),
omit.table.layout = "n")
library(stargazer)
stargazer(model_transform, model_key, model1,
type = 'text', report = 'vc',
keep.stat = c('rsq', 'n'),
omit.table.layout = "n")
library(stargazer)
stargazer(model_transform, model_key, model1,
title = "Linear Models Parameters Predicting Crime Rate"
type = 'text', report = 'vc',
library(stargazer)
stargazer(model_transform, model_key, model1,
title = "Linear Models Parameters Predicting Crime Rate",
type = 'text', report = 'vc',
keep.stat = c('rsq', 'n'),
omit.table.layout = "n")
library(stargazer)
options(warn = -1)
stargazer(model_transform, model_key, model1,
title = "Linear Models Parameters Predicting Crime Rate",
type = 'text', report = 'vc',
keep.stat = c('rsq', 'n'),
omit.table.layout = 'n')
